@page "/"
@layout MainLayout
@attribute [Authorize]

@using Microsoft.AspNetCore.Authorization

@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@inject IStringLocalizer<Localization.Locals> Localizer

<PageTitle>Home</PageTitle>

<p>@Localizer["Greeting"] @userName</p> 

<AuthorizeView>
    <Authorized>

        <h1>Culture Example 1</h1>

        <ul>
            <li><b>CurrentCulture</b>: @CultureInfo.CurrentCulture</li>
            <li><b>CurrentUICulture</b>: @CultureInfo.CurrentUICulture</li>
        </ul>

        <h2>Rendered values</h2>

        <ul>
            <li><b>Date</b>: @dt</li>
            <li><b>Number</b>: @number.ToString("N2")</li>
        </ul>

        <h2><code>&lt;input&gt;</code> elements that don't set a <code>type</code></h2>

        <p>
            The following <code>&lt;input&gt;</code> elements use
            <code>CultureInfo.CurrentCulture</code>.
        </p>

        <ul>
            <li><label><b>Date:</b> <input @bind="dt" /></label></li>
            <li><label><b>Number:</b> <input @bind="number" /></label></li>
        </ul>

        <h2><code>&lt;input&gt;</code> elements that set a <code>type</code></h2>

        <p>
            The following <code>&lt;input&gt;</code> elements use
            <code>CultureInfo.InvariantCulture</code>.
        </p>

        <ul>
            <li><label><b>Date:</b> <input type="date" @bind="dt" /></label></li>
            <li><label><b>Number:</b> <input type="number" @bind="number" /></label></li>
        </ul>

    </Authorized>
</AuthorizeView>

@code {
    private DateTime dt = DateTime.Now;
    private double number = 1999.69;
    private string userName = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name ?? "";
        }
    }
}
