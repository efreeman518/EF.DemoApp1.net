#promote artifact through environments
name: Build and Deploy SampleApp.Api

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: '9.x'
  #RESOURCE_GROUP: 'rg-dev1'
  REGION: 'eastus2'
  ZIP_NAME: 'sampleapp-api.zip'
  # ACI_MEMORY: 2
  # ACI_CPU: 1
  # CONTAINER_IMAGE: 'mcr.microsoft.com/azure-cli:latest'
  # ACI_SUBNET: 'subnet-aci-dev1'
  # ACI_VNET: 'vnet-dev1'
  #IDENTITY_RESOURCE_ID: /subscriptions/856c8385-8e8f-44c2-a98b-6be88601ad26/resourcegroups/rg-dev1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/aci-deployer-identity

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo for build
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore, Build, Publish
        run: |
          dotnet restore ./SampleApp.Api/SampleApp.Api.csproj
          dotnet build ./SampleApp.Api/SampleApp.Api.csproj --configuration Release --no-restore
          dotnet publish ./SampleApp.Api/SampleApp.Api.csproj -c Release -o publish_output

      - name: Zip published output
        run: zip -r ${{ env.ZIP_NAME }} publish_output

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sampleapp-api
          path: ${{ env.ZIP_NAME }}

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repo for access to script actions/deploy-via-aci
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sampleapp-api
          path: ./artifact
      
      - name: debug
        run: |
          echo "github-run-id=${{ github.run_id }}"
          echo "environment=${{ github.event.inputs.environment }}"
          echo "RESOURCE_GROUP=${{ env.RESOURCE_GROUP }}"
          echo "IDENTITY_RESOURCE_ID=${{ env.IDENTITY_RESOURCE_ID }}"
          echo "ACI_VNET=${{ env.ACI_VNET }}"
          echo "ACI_SUBNET=${{ env.ACI_SUBNET }}"
          

      - name: Deploy to Dev via ACI
        uses: ./.github/actions/deploy-via-aci
        with:
          github-run-id: ${{ github.run_id }}
          environment: ${{ github.event.inputs.environment }}
          resource-group: ${{ env.RESOURCE_GROUP }}
          region: ${{ env.REGION }}
          identity-resource-id: ${{ env.IDENTITY_RESOURCE_ID }}
          aci-vnet: ${{ env.ACI_VNET }}
          aci-subnet: ${{ env.ACI_SUBNET }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
      
      - name: Checkout repo for access to script actions/deploy-via-aci
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sampleapp-api
          path: ./artifact

      - name: Deploy to Prod via ACI
        uses: ./.github/actions/deploy-via-aci
        with:
          github-run-id: ${{ github.run_id }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}