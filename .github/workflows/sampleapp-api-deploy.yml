#promote artifact through environments
name: Deploy SampleApp.Api

on:
  workflow_run:
    workflows: ["Build SampleApp.Api"]
    types:
      - completed

  # workflow_dispatch:
  #   inputs:
  #     environment:
  #       type: choice
  #       description: Select environment
  #       required: true
  #       options:
  #         - dev
  #         - prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev # This is the environment name in GitHub
    env:
      ENVIRONMENT_NAME: ${{ job.environment.name }} # This is the real GitHub environment
    steps:
      - name: Checkout repo for access to script actions/deploy-via-aci
        uses: actions/checkout@v4

        # download here and pass in to action
        # actions/download-artifact cannot be used inside composite actions if you're trying to access artifacts from another workflow run (via run-id and repository)
      - name: Download build artifact #The deploy script downloads the artifact from the specific triggering build run — not "the latest" in general.
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./artifact
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for the current repo
      
      - name: debug
        run: |
          echo "github-run-id=${{ github.run_id }}"
          echo "environment=$ENVIRONMENT_NAME"
          echo "RESOURCE_GROUP=${{ vars.RESOURCE_GROUP }}"
          echo "IDENTITY_RESOURCE_ID=${{ vars.IDENTITY_RESOURCE_ID }}"
          echo "ACI_VNET=${{ vars.ACI_VNET }}"
          echo "ACI_SUBNET=${{ vars.ACI_SUBNET }}"

      - name: Deploy to Dev via ACI
        uses: ./.github/actions/deploy-via-aci
        with:
          github-run-id: ${{ github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for the current repo
          artifact-path: ./artifact
          environment: $ENVIRONMENT_NAME
          resource-group: ${{ vars.RESOURCE_GROUP }}
          region: ${{ vars.REGION }}
          identity-resource-id: ${{ vars.IDENTITY_RESOURCE_ID }}
          aci-vnet: ${{ vars.ACI_VNET }}
          aci-subnet: ${{ vars.ACI_SUBNET }}
          app-service-name: ${{ vars.APP_SERVICE_NAME_API }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: prod
    steps:
      # Not needed if using Github Environments with required reviewers
      # - name: Wait for approval
      #   uses: trstringer/manual-approval@v1
      #   with:
      #     secret: ${{ secrets.MANUAL_APPROVAL_PAT }} #must use PAT for user-owned repos (Repo Issues & Workflows access); org-owned repos possibly can use ${{ github.token }}
      #     approvers: efreeman518  # <-- Replace with actual GitHub usernames
      #     minimum-approvals: 1
      #     exclude-workflow-initiator-as-approver: false
      
      - name: Checkout repo for access to script actions/deploy-via-aci
        uses: actions/checkout@v4

        # download here and pass in to action
        # actions/download-artifact cannot be used inside composite actions if you're trying to access artifacts from another workflow run (via run-id and repository)
      - name: Download build artifact #The deploy script downloads the artifact from the specific triggering build run — not "the latest" in general.
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./artifact
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for the current repo
      
      - name: debug
        run: |
          echo "github-run-id=${{ github.run_id }}"
          echo "environment=${{ github.event.inputs.environment }}"
          echo "RESOURCE_GROUP=${{ vars.RESOURCE_GROUP }}"
          echo "IDENTITY_RESOURCE_ID=${{ vars.IDENTITY_RESOURCE_ID }}"
          echo "ACI_VNET=${{ vars.ACI_VNET }}"
          echo "ACI_SUBNET=${{ vars.ACI_SUBNET }}"

      - name: Deploy to Dev via ACI
        uses: ./.github/actions/deploy-via-aci
        with:
          github-run-id: ${{ github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for the current repo
          artifact-path: ./artifact
          environment: dev
          resource-group: ${{ vars.RESOURCE_GROUP }}
          region: ${{ vars.REGION }}
          identity-resource-id: ${{ vars.IDENTITY_RESOURCE_ID }}
          aci-vnet: ${{ vars.ACI_VNET }}
          aci-subnet: ${{ vars.ACI_SUBNET }}
          app-service-name: ${{ vars.APP_SERVICE_NAME_API }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}