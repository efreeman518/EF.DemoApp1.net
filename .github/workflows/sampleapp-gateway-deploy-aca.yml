name: Deploy SampleApp.Gateway to ACA

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag (e.g., latest or commit SHA)"
        required: true
        default: latest

  workflow_run:
    workflows: ["Build and Push SampleApp.Gateway Container"]
    types:
      - completed

env:
  IMAGE_NAME: sampleapp-gateway
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev #Github env vars
    permissions:
      id-token: write
      contents: read
      packages: read

    steps:
      - name: Log in to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Authenticate to GHCR with GitHub token
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Determine the correct tag to use
      - name: Determine image tag
        id: determine_tag
        run: |
          REQUESTED_TAG="${{ github.event.inputs.tag || github.sha }}"
          echo "Requested tag: $REQUESTED_TAG"
          
          # Try to pull the requested tag
          if docker pull "$REGISTRY/$OWNER/$IMAGE_NAME:$REQUESTED_TAG" &>/dev/null; then
            echo "Using requested tag: $REQUESTED_TAG"
            echo "tag=$REQUESTED_TAG" >> $GITHUB_OUTPUT
          else
            echo "Requested tag not found, using 'latest' instead"
            docker pull "$REGISTRY/$OWNER/$IMAGE_NAME:latest"
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi
      
      # Configure container app registry
      - name: Set GHCR registry on container app
        run: |
          az containerapp registry set \
            --name ${{ vars.ACA_CONTAINERAPP_NAME_GATEWAY }} \
            --resource-group ${{ vars.RESOURCE_GROUP }} \
            --server $REGISTRY \
            --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }}

      # Deploy the application
      - name: Deploy to Azure Container App
        run: |
          echo "Deploying image: $REGISTRY/$OWNER/$IMAGE_NAME:${{ steps.determine_tag.outputs.tag }}"
          
          az containerapp update \
            --name ${{ vars.ACA_CONTAINERAPP_NAME_GATEWAY }} \
            --resource-group ${{ vars.RESOURCE_GROUP }} \
            --image "$REGISTRY/$OWNER/$IMAGE_NAME:${{ steps.determine_tag.outputs.tag }}" \
            --set-env-vars "ASPNETCORE_URLS=http://+:8080" \
            --query properties.configuration.ingress.fqdn