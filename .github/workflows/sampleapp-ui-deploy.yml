name: Deploy SampleApp.UI1

on:
  workflow_run:
    workflows: ["Build SampleApp.UI1"]
    types:
      - completed

jobs:
  deploy_dev:
    name: Deploy Dev Job
    environment: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download build artifact #The deploy script downloads the artifact from the specific triggering build run — not "the latest" in general.
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./artifact
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for the current repo

      - name: Check if artifact.zip exists
        run: |
          [ -f ./artifact/artifact.zip ] || (echo "❌ artifact.zip not found!" && exit 1)

      - name: Unzip artifact
        run: unzip ./artifact/artifact.zip -d wwwroot

      #debug
      # - name: List files (Debug)
      #   run: ls -R wwwroot

      - name: Validate wwwroot Structure
        run: |
          [ -f wwwroot/index.html ] || (echo "index.html missing!" && exit 1)
          [ -d wwwroot/_framework ] || (echo "_framework folder missing!" && exit 1)
      
      - name: Validate deployment token exists
        run: |
          if [ -z "${DEPLOYMENT_TOKEN}" ]; then
            echo "❌ Deployment token is missing or empty!"
            exit 1
          else
            echo "✅ Deployment token is set."
          fi
        env:
          DEPLOYMENT_TOKEN: ${{ secrets.UI_STATICWEBAPP_DEPLOYMENT_TOKEN }}

      # - name: Azure Login (OIDC)
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      #https://learn.microsoft.com/en-us/azure/static-web-apps/build-configuration?tabs=identity&pivots=github-actions#build-and-deploy
      - name: Deploy Dev Step
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.UI_STATICWEBAPP_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integration (issues, optional)
          action: "upload"
          skip_app_build: true
          skip_api_build: true
          app_location: "./wwwroot/"
          api_location: ""

  deploy_prod:
    environment: prod
    needs: deploy_dev
    runs-on: ubuntu-latest
    name: Deploy Prod Job
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./artifact
          run-id: ${{ github.event.workflow_run.id }}
          repository: ${{ github.repository }} 
          #github-token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for the current repo
      
      - name: Check if artifact.zip exists
        run: |
          [ -f ./artifact/artifact.zip ] || (echo "❌ artifact.zip not found!" && exit 1)

      - name: Unzip artifact
        run: unzip artifact/artifact.zip -d wwwroot
      
      # - name: Install OIDC Client
      #   run: npm install @actions/core@1.6.0 @actions/http-client
      
      # - name: Get Id Token
      #   uses: actions/github-script@v6
      #   id: idtoken
      #   with:
      #     script: |
      #       const coredemo = require('@actions/core')
      #       return await coredemo.getIDToken()
      #     result-encoding: string
      
      # - name: Wait for manual approval
      #   uses: trstringer/manual-approval@v1
      #   with:
      #     secret: ${{ github.token }}
      #     approvers: <YOUR_TEAM_MEMBERS_HERE>
      #     minimum-approvals: 1
      
      - name: Deploy Prod Step
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.UI_STATICWEBAPP_DEPLOYMENT_TOKEN }}
          action: "upload"
          app_location: "wwwroot"
          api_location: "" # Leave empty if no API
          output_location: "" # Leave empty for Blazor WASM
          #github_id_token: ${{ steps.idtoken.outputs.result }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          #environment_name: "prod"


# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened, closed]
#     branches:
#       - main

# jobs:
#   build_and_deploy_job:
#     if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
#     runs-on: ubuntu-latest
#     name: Build and Deploy Job
#     permissions:
#        id-token: write
#        contents: read
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: true
#           lfs: false
#       - name: Install OIDC Client from Core Package
#         run: npm install @actions/core@1.6.0 @actions/http-client
#       - name: Get Id Token
#         uses: actions/github-script@v6
#         id: idtoken
#         with:
#            script: |
#                const coredemo = require('@actions/core')
#                return await coredemo.getIDToken()
#            result-encoding: string
#       - name: Build And Deploy
#         id: builddeploy
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           azure_static_web_apps_api_token: ${{ secrets.UI_STATICWEBAPP_DEPLOYMENT_TOKEN }}
#           action: "upload"
#           ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
#           # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
#           app_location: "./SampleApp.UI1" # App source code path
#           api_location: "" # Api source code path - optional
#           output_location: "wwwroot" # Built app content directory - optional
#           github_id_token: ${{ steps.idtoken.outputs.result }}
#           ###### End of Repository/Build Configurations ######

#   close_pull_request_job:
#     if: github.event_name == 'pull_request' && github.event.action == 'closed'
#     runs-on: ubuntu-latest
#     name: Close Pull Request Job
#     steps:
#       - name: Close Pull Request
#         id: closepullrequest
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           action: "close"
